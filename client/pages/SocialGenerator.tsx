import { useState, useEffect } from "react";
import { useLocation } from "react-router-dom";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { Slider } from "@/components/ui/slider";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import {
  Share2,
  Copy,
  Download,
  Sparkles,
  RefreshCw,
  Settings,
  Hash,
  AtSign,
  Calendar,
} from "lucide-react";
import StarLoading from "@/components/ui/StarLoading";

const industries = [
  { value: "technology", label: "Technology" },
  { value: "healthcare", label: "Healthcare" },
  { value: "finance", label: "Finance" },
  { value: "retail", label: "Retail" },
  { value: "education", label: "Education" },
  { value: "hospitality", label: "Hospitality" },
  { value: "manufacturing", label: "Manufacturing" },
  { value: "consulting", label: "Consulting" },
];

const tones = [
  { value: "casual", label: "Casual" },
  { value: "professional", label: "Professional" },
  { value: "promotional", label: "Promotional" },
  { value: "friendly", label: "Friendly" },
];

const platforms = [
  { value: "twitter", label: "Twitter/X", maxLength: 280 },
  { value: "instagram", label: "Instagram", maxLength: 2200 },
  { value: "linkedin", label: "LinkedIn", maxLength: 3000 },
  { value: "facebook", label: "Facebook", maxLength: 63206 },
];

export default function SocialGenerator() {
  const location = useLocation();
  const [prompt, setPrompt] = useState("");
  const [industryType, setIndustryType] = useState("");
  const [productService, setProductService] = useState("");
  const [tone, setTone] = useState("promotional");
  const [platform, setPlatform] = useState("instagram");
  const [length, setLength] = useState([150]);
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedContent, setGeneratedContent] = useState({
    socialPost: "",
    caption: "",
    hashtags: [],
  });

  useEffect(() => {
    const params = new URLSearchParams(location.search);
    const promptParam = params.get("prompt");
    if (promptParam) setPrompt(promptParam);
  }, [location.search]);

  const handleGenerate = async () => {
    if (!industryType || !productService) return;

    setIsGenerating(true);

    // Simulate API call to Qwen-Turbo
    setTimeout(() => {
      const sampleContent = {
        socialPost: `ðŸš€ Transforming ${industryType} with innovative ${productService} solutions!

In today's digital landscape, ${productService} is revolutionizing how businesses operate. Our cutting-edge approach helps companies:

âœ¨ Streamline operations
ðŸ’¡ Boost productivity  
ðŸ“ˆ Drive growth
ðŸŽ¯ Exceed customer expectations

Ready to take your ${industryType} business to the next level? Let's connect and explore the possibilities!

#Innovation #${industryType.charAt(0).toUpperCase() + industryType.slice(1)} #Growth #Success`,

        caption: `ðŸ’¼ Elevating ${industryType} through ${productService}

When innovation meets expertise, magic happens. We're passionate about helping ${industryType} leaders achieve breakthrough results with our ${productService} solutions.

ðŸŒŸ What sets us apart:
â€¢ Proven track record
â€¢ Customized solutions
â€¢ Expert support team
â€¢ Measurable results

Drop a comment below or DM us to learn how we can help transform your business! ðŸ‘‡

#${industryType.charAt(0).toUpperCase() + industryType.slice(1)}Solutions #BusinessGrowth #Innovation`,

        hashtags: [
          `#${industryType.charAt(0).toUpperCase() + industryType.slice(1)}`,
          "#Innovation",
          "#BusinessGrowth",
          "#Success",
          "#DigitalTransformation",
          "#Leadership",
        ],
      };

      setGeneratedContent(sampleContent);
      setIsGenerating(false);
    }, 2000);
  };

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text);
  };

  const downloadContent = () => {
    const content = `SOCIAL MEDIA CONTENT PACK
Generated for: ${industryType} - ${productService}
Platform: ${platform}
Tone: ${tone}
Date: ${new Date().toLocaleDateString()}

=== SOCIAL POST ===
${generatedContent.socialPost}

=== CAPTION ===
${generatedContent.caption}

=== HASHTAGS ===
${generatedContent.hashtags.join(" ")}

Generated by GenAI Studio - Powered by Qwen-Turbo`;

    const element = document.createElement("a");
    const file = new Blob([content], { type: "text/plain" });
    element.href = URL.createObjectURL(file);
    element.download = `social-content-${Date.now()}.txt`;
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
  };

  const selectedPlatform = platforms.find((p) => p.value === platform);

  return (
    <div className="min-h-screen py-8">
      <div className="container mx-auto px-4 max-w-7xl">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="flex items-center justify-center mb-4">
            <div className="h-12 w-12 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg flex items-center justify-center mr-3">
              <Share2 className="h-6 w-6 text-white" />
            </div>
            <h1 className="text-3xl md:text-4xl font-bold">
              Social Media Generator
            </h1>
          </div>
          <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
            Generate engaging social media posts and captions optimized for any
            platform with unified branding
          </p>
          <Badge variant="secondary" className="mt-4">
            <Sparkles className="h-3 w-3 mr-1" />
            Powered by Qwen-Turbo
          </Badge>
        </div>

        <div className="grid lg:grid-cols-5 gap-8">
          {/* Settings Panel */}
          <div className="lg:col-span-2">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Settings className="h-5 w-5 mr-2" />
                  Content Settings
                </CardTitle>
                <CardDescription>
                  Configure your social media content parameters
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                {/* Main Input */}
                <div className="space-y-2">
                  <Label htmlFor="main-input">Main Input</Label>
                  <Input
                    id="main-input"
                    placeholder="Type your social post..."
                    value={prompt}
                    onChange={(e) => setPrompt(e.target.value)}
                    className="bg-gray-800 bg-opacity-60 text-white placeholder:text-gray-300 border-none shadow-none"
                  />
                </div>
                {/* Industry Select */}
                <div className="space-y-2">
                  <Label htmlFor="industry">Industry Type *</Label>
                  <Select value={industryType} onValueChange={setIndustryType}>
                    <SelectTrigger>
                      <SelectValue placeholder="Select your industry" />
                    </SelectTrigger>
                    <SelectContent>
                      {industries.map((industry) => (
                        <SelectItem key={industry.value} value={industry.value}>
                          {industry.label}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="product-service">Product/Service *</Label>
                  <Input
                    id="product-service"
                    placeholder="e.g., AI-powered analytics, eco-friendly packaging"
                    value={productService}
                    onChange={(e) => setProductService(e.target.value)}
                  />
                </div>

                {/* Platform Select */}
                <div className="space-y-2">
                  <Label htmlFor="platform">Platform</Label>
                  <Select value={platform} onValueChange={setPlatform}>
                    <SelectTrigger className="bg-gray-800 bg-opacity-60 text-white border-none shadow-none">
                      <SelectValue placeholder="Select platform" />
                    </SelectTrigger>
                    <SelectContent className="bg-gray-800 bg-opacity-80 text-white">
                      {platforms.map((platformOption) => (
                        <SelectItem
                          key={platformOption.value}
                          value={platformOption.value}
                          className="text-white bg-transparent hover:bg-gray-700/60"
                        >
                          {platformOption.label}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="tone">Tone & Style</Label>
                  <Select value={tone} onValueChange={setTone}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      {tones.map((toneOption) => (
                        <SelectItem
                          key={toneOption.value}
                          value={toneOption.value}
                        >
                          {toneOption.label}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="length">
                    Content Length: {length[0]} characters
                  </Label>
                  <Slider
                    value={length}
                    onValueChange={setLength}
                    max={selectedPlatform?.maxLength || 300}
                    min={50}
                    step={10}
                    className="w-full"
                  />
                  <div className="text-xs text-muted-foreground">
                    Max for {selectedPlatform?.label}:{" "}
                    {selectedPlatform?.maxLength} chars
                  </div>
                </div>

                <Button
                  onClick={handleGenerate}
                  disabled={!industryType || !productService || isGenerating}
                  className="w-full bg-gradient-to-r from-blue-500 to-purple-500 hover:opacity-90"
                  size="lg"
                >
                  {isGenerating ? (
                    <>
                      <RefreshCw className="h-4 w-4 mr-2 animate-spin" />
                      Generating...
                    </>
                  ) : (
                    <>
                      <Sparkles className="h-4 w-4 mr-2" />
                      Generate Content
                    </>
                  )}
                </Button>
              </CardContent>
            </Card>
          </div>

          {/* Output Panel */}
          <div className="lg:col-span-3">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center justify-between">
                  <span>Generated Content</span>
                  {generatedContent.socialPost && (
                    <Button
                      variant="outline"
                      size="sm"
                      onClick={downloadContent}
                    >
                      <Download className="h-4 w-4 mr-1" />
                      Download Pack
                    </Button>
                  )}
                </CardTitle>
                <CardDescription>
                  Your social media content will appear here
                </CardDescription>
              </CardHeader>
              <CardContent>
                {isGenerating ? (
                  <div className="w-full h-[300px] flex items-center justify-center relative">
                    <StarLoading />
                  </div>
                ) : generatedContent.socialPost ? (
                  <Tabs defaultValue="post" className="w-full">
                    <TabsList className="grid w-full grid-cols-3">
                      <TabsTrigger value="post">Social Post</TabsTrigger>
                      <TabsTrigger value="caption">Caption</TabsTrigger>
                      <TabsTrigger value="hashtags">Hashtags</TabsTrigger>
                    </TabsList>

                    <TabsContent value="post" className="space-y-4">
                      <div className="bg-muted/50 rounded-lg p-4 relative">
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={() =>
                            copyToClipboard(generatedContent.socialPost)
                          }
                          className="absolute top-2 right-2"
                        >
                          <Copy className="h-4 w-4" />
                        </Button>
                        <pre className="whitespace-pre-wrap text-sm leading-relaxed font-sans pr-10">
                          {generatedContent.socialPost}
                        </pre>
                        <div className="flex items-center justify-between mt-4 pt-4 border-t border-border">
                          <div className="text-xs text-muted-foreground">
                            {generatedContent.socialPost.length} characters
                          </div>
                          <Badge variant="secondary">
                            <Calendar className="h-3 w-3 mr-1" />
                            Ready to publish
                          </Badge>
                        </div>
                      </div>
                    </TabsContent>

                    <TabsContent value="caption" className="space-y-4">
                      <div className="bg-muted/50 rounded-lg p-4 relative">
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={() =>
                            copyToClipboard(generatedContent.caption)
                          }
                          className="absolute top-2 right-2"
                        >
                          <Copy className="h-4 w-4" />
                        </Button>
                        <pre className="whitespace-pre-wrap text-sm leading-relaxed font-sans pr-10">
                          {generatedContent.caption}
                        </pre>
                        <div className="flex items-center justify-between mt-4 pt-4 border-t border-border">
                          <div className="text-xs text-muted-foreground">
                            {generatedContent.caption.length} characters
                          </div>
                          <Badge variant="secondary">
                            <AtSign className="h-3 w-3 mr-1" />
                            Engagement ready
                          </Badge>
                        </div>
                      </div>
                    </TabsContent>

                    <TabsContent value="hashtags" className="space-y-4">
                      <div className="bg-muted/50 rounded-lg p-4 relative">
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={() =>
                            copyToClipboard(generatedContent.hashtags.join(" "))
                          }
                          className="absolute top-2 right-2"
                        >
                          <Copy className="h-4 w-4" />
                        </Button>
                        <div className="flex flex-wrap gap-2">
                          {generatedContent.hashtags.map((hashtag, index) => (
                            <Badge
                              key={index}
                              variant="outline"
                              className="cursor-pointer hover:bg-primary hover:text-primary-foreground"
                            >
                              <Hash className="h-3 w-3 mr-1" />
                              {hashtag.replace("#", "")}
                            </Badge>
                          ))}
                        </div>
                        <div className="flex items-center justify-between mt-4 pt-4 border-t border-border">
                          <div className="text-xs text-muted-foreground">
                            {generatedContent.hashtags.length} hashtags
                          </div>
                          <Badge variant="secondary">
                            <Hash className="h-3 w-3 mr-1" />
                            Trending optimized
                          </Badge>
                        </div>
                      </div>
                    </TabsContent>
                  </Tabs>
                ) : (
                  <div className="w-full h-[300px] flex items-center justify-center relative">
                    <StarLoading />
                  </div>
                )}
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Platform Optimization Tips */}
        <div className="mt-16">
          <h2 className="text-2xl font-bold text-center mb-8">
            Platform Optimization
          </h2>
          <div className="grid md:grid-cols-4 gap-6">
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Twitter/X</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground text-sm">
                  Short, punchy messages with trending hashtags and clear CTAs.
                </p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Instagram</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground text-sm">
                  Visual storytelling with engaging captions and strategic
                  hashtags.
                </p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">LinkedIn</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground text-sm">
                  Professional insights with industry-specific language and
                  value.
                </p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Facebook</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground text-sm">
                  Community-focused content that encourages discussion and
                  sharing.
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}
